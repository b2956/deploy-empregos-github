{"version":3,"sources":["useFetchJobs.js","Components/Job.js","Components/JobsPagination.js","Components/SearchForm.js","App.js","index.js"],"names":["BASE_URL","ACTIONS","reducer","state","action","type","loading","jobs","payload","error","hasNextPage","Job","job","useState","open","setOpen","Card","className","Body","Title","title","company","Subtitle","Date","created_at","toLocaleDateString","Badge","variant","location","style","wordBreak","source","how_to_apply","alt","src","company_logo","height","Text","Button","onClick","prevOpen","Collapse","in","description","JobsPagination","page","setPage","nextPageHandler","Pagination","Prev","Item","Ellipsis","active","Next","SearchForm","params","onParamChange","Form","Row","Group","as","Col","Label","Control","onChange","value","name","xs","Check","full_time","id","label","App","setParams","useReducer","dispatch","useEffect","cancelToken1","axios","CancelToken","get","cancelToken","token","markdown","then","response","data","catch","isCancel","cancelToken2","length","cancel","useFetchJobs","Container","event","param","target","prevParams","map","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.250f7727.chunk.js","sourcesContent":["import { useReducer, useEffect } from 'react';\nimport axios from 'axios';\n\nconst BASE_URL = 'https://cors-anywhere.herokuapp.com/https://jobs.github.com/positions.json';\n\nconst ACTIONS = {\n    MAKE_REQUEST: 'make-request',\n    GET_DATA: 'get-data',\n    ERROR: 'error',\n    UPDATE_HAS_NEXT_PAGE: 'update-has-next-page'\n};\n\nconst reducer = (state, action) => {\n    switch(action.type) {\n        case ACTIONS.MAKE_REQUEST: {\n            return { loading: true, jobs: [] };\n        }\n        case ACTIONS.GET_DATA: {\n            return { ...state, loading: false, jobs: action.payload.jobs }\n        }\n        case ACTIONS.ERROR: {\n            return { ...state, loading: false, error: action.payload.error, jobs: [] };\n        }\n        case ACTIONS.UPDATE_HAS_NEXT_PAGE: {\n            return { ...state, hasNextPage: action.payload.hasNextPage }\n        }\n        default: \n        return state;\n    }\n};\n\nexport default function useFetchJobs(params, page) {\n    const [state, dispatch] = useReducer(reducer, { jobs: [], loading: true });\n\n    useEffect(() => {\n        const cancelToken1 = axios.CancelToken.source();\n\n        dispatch({ type: ACTIONS.MAKE_REQUEST });\n        axios.get(BASE_URL, {\n            cancelToken: cancelToken1.token,\n            params: {\n                markdown: true,\n                page: page, \n                ...params\n            }\n        })\n        .then(response => {\n            dispatch({ \n                type: ACTIONS.GET_DATA, \n                payload: { \n                    jobs: response.data \n                }\n            });\n        })\n        .catch(error => {\n            if(axios.isCancel(error)) return \n            dispatch({ \n                type: ACTIONS.ERROR, \n                payload: { \n                   error\n                }\n            });\n        });\n\n        const cancelToken2 = axios.CancelToken.source();\n\n        axios.get(BASE_URL, {\n            cancelToken: cancelToken2.token,\n            params: {\n                markdown: true,\n                page: page + 1, \n                ...params\n            }\n        })\n        .then(response => {\n            dispatch({ \n                type: ACTIONS.UPDATE_HAS_NEXT_PAGE, \n                payload: { \n                   hasNextPage: response.data.length !== 0 \n                }\n            });\n        })\n        .catch(error => {\n            if(axios.isCancel(error)) return \n            dispatch({ \n                type: ACTIONS.ERROR, \n                payload: { \n                   error\n                }\n            });\n        })\n\n        return () => {\n            cancelToken1.cancel();\n            cancelToken2.cancel();\n        }\n    }, [params, page]);\n\n    return state;\n}","import React, { useState } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Badge from 'react-bootstrap/Badge';\nimport Button from 'react-bootstrap/Button';\nimport Collapse from 'react-bootstrap/Collapse';\nimport ReactMarkdown from 'react-markdown';\n\nconst Job = ({ job }) => {\n    const [open, setOpen] = useState(false);\n\n    return (\n        <Card className=\"mb-3\">\n            <Card.Body>\n                <div className=\"d-flex justify-content-between\">\n                    <div>\n                        <Card.Title>\n                            {job.title} - <span className=\"text-muted font-weight-light\">{job.company}</span>\n                        </Card.Title>\n                        <Card.Subtitle className=\"text-mute mb-2\" >\n                            {new Date(job.created_at).toLocaleDateString()}\n                        </Card.Subtitle>\n                        <Badge variant=\"secondary\" className=\"mr-2\" >{job.type}</Badge>\n                        <Badge variant=\"secondary\">{job.location}</Badge>\n                        <div style={{wordBreak: \"break-all\"}}>\n                            <ReactMarkdown source={job.how_to_apply}/>\n                        </div>\n                    </div>\n                    <img className=\"d-sm-none d-md-block\" alt={job.company} src={job.company_logo} height=\"50\" />\n                </div>\n                <Card.Text >\n                    <Button \n                        variant=\"primary\" \n                        onClick={() => setOpen(prevOpen => !prevOpen)}>\n                            {open ? 'Esconder Detalhes' : 'Ver Detalhes'}\n                    </Button>\n                    <Collapse in={open}>\n                        <div className=\"mt-4\">\n                            <ReactMarkdown source={job.description}/>\n                        </div>\n                    </Collapse>\n                </Card.Text>\n            </Card.Body>\n        </Card>\n    )\n};\n\nexport default Job;","import React from 'react';\nimport Pagination from 'react-bootstrap/Pagination';\n\nconst JobsPagination = ({page, setPage, hasNextPage}) => {\n    const nextPageHandler = () => {\n        setPage(page + 1);\n    }\n\n    const previousPageHandler = () => {\n        setPage(page - 1);\n    }\n\n    return (\n        <Pagination>\n            {page > 1 && <Pagination.Prev onClick={previousPageHandler}/> }\n            {page > 1 && <Pagination.Item onClick={() => setPage(1)}>1</Pagination.Item> }\n            {page > 3 && <Pagination.Ellipsis/>}\n            {page > 2 && <Pagination.Item>{page - 1}</Pagination.Item> }\n            <Pagination.Item active>{page}</Pagination.Item>\n            {hasNextPage && <Pagination.Item onClick={nextPageHandler}>{page + 1}</Pagination.Item>}\n            {hasNextPage && <Pagination.Next onClick={nextPageHandler}/>}\n        </Pagination>\n    )\n}\n\nexport default JobsPagination;","import React from 'react';\n\nimport Form from 'react-bootstrap/Form';\nimport Col from 'react-bootstrap/Col';\n\n\nconst SearchForm = ({params, onParamChange}) => {\n    return (\n        <Form className=\"mb-4\">\n            <Form.Row className=\"align-items-end\" >\n                <Form.Group as={Col}>\n                    <Form.Label>Descrição</Form.Label>\n                    <Form.Control onChange={onParamChange} value={params.description} name=\"description\"></Form.Control>\n                </Form.Group>\n                <Form.Group as={Col}>\n                    <Form.Label>Lugar</Form.Label>\n                    <Form.Control onChange={onParamChange} value={params.location} name=\"location\"></Form.Control>\n                </Form.Group>\n                <Form.Group as={Col} xs=\"auto\" className=\"ml-2\">\n                    <Form.Check onChange={onParamChange} value={params.full_time} name=\"full_time\" id=\"full_time\" label=\"Apenas Tempo Integral\" type=\"checkbox\" className=\"mb-2\" />\n                </Form.Group>\n            </Form.Row>\n        </Form>\n    )\n}\n\nexport default SearchForm;","import React, { useState } from 'react';\nimport { Container } from 'react-bootstrap';\n\nimport useFetchJobs from './useFetchJobs';\n\nimport Job from './Components/Job';\nimport JobsPagination from './Components/JobsPagination';\nimport SearchForm from './Components/SearchForm';\n\nfunction App() {\n  const [page, setPage] = useState(1);\n  const [params, setParams] = useState({});\n\n  const { jobs, loading, error, hasNextPage } = useFetchJobs(params, page);\n\n  const paramChangeHandler = event => {\n    const param = event.target.name;\n    const value = event.target.value;\n    \n    setPage(1);\n\n    setParams(prevParams => {\n      return { ...prevParams, [param]: value }\n    })\n    \n  }\n\n  return (\n    < Container className=\"my-4\" >\n      <h1 className=\"mb-4\" >Empregos GitHub</h1>\n      < SearchForm params={params} onParamChange={paramChangeHandler} />\n      <JobsPagination page={page} setPage={setPage} hasNextPage={hasNextPage} />\n      {loading && <h1>Carregando ...</h1> }\n      {error && <h1>Erro. Tente recarregar a página.</h1> }\n      {jobs.map(job => {\n        return <Job key={job.id} job={job} />\n      })}\n      <JobsPagination page={page} setPage={setPage} hasNextPage={hasNextPage} />\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}